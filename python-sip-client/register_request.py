"""REGISTER sip:192.168.0.104 SIP/2.0Via: SIP/2.0/TCP 192.168.0.100:39510;branch=z9hG4bK-d8754z-fb005e1728002a7e-1---d8754z-Max-Forwards: 70Contact: <sip:1000@192.168.0.100:39510;rinstance=85a7115cfc971730;transport=tcp>To: "client 1"<sip:1000@192.168.0.104>From: "client 1"<sip:1000@192.168.0.104>;tag=8ff18a71Call-ID: MTYyZjY5ZTc0OWEzMzAyZDZmODk0NTJjMTQ0MDFmNGICSeq: 1 REGISTERExpires: 3600Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY, MESSAGE, SUBSCRIBE, INFOUser-Agent: X-Lite release 4.5.4  stamp 70866Content-Length: 0"""class RegisterRequest:    #Headers    method = "REGISTER sip:{} SIP/2.0\r\n" #Proxy's IP    via = "Via: SIP/2.0/TCP {}:{};branch=123123123123nn\r\n" #local ip and port    mforwards = "Max-Forwards: 70\r\n"    contact = "Contact: <sip:{}@{}:{};transport=tcp>\r\n" #extension, local ip and port    to = "To: \"{}\"<sip:{}@{}>\r\n" #display name, extension, proxy's ip    from_h = "From: \"{}\"<sip:{}@{};tag=423424>\r\n" #display name, extension, proxy's ip    call_id = "Call-ID: {}\r\n" #call id - random number    cseq = "CSeq: {} REGISTER\r\n" #csequence number - 1,2,3,...    expires = "Expires: 3600\r\n"    allow = "Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY, MESSAGE, SUBSCRIBE, INFO\r\n"    ua = "User-Agent: PySIP 1.0a\r\n"    content_length = "Content-Length: 0\r\n\r\n"    def __init__(self, proxy, local_ip, local_port, display_name, extension, cseq_param):        self.method = self.method.format(proxy)        self.via = self.via.format(local_ip, local_port)        self.contact = self.contact.format(extension, local_ip, local_port)        self.to = self.to.format(display_name, extension, proxy)        self.from_h = self.from_h.format(display_name, extension, proxy)        self.call_id = self.call_id.format(2)        self.cseq = self.cseq.format(cseq_param)    def create(self):        return self.method+self.via+self.mforwards+self.contact+self.to+self.from_h+\                self.call_id+self.cseq+self.expires+self.allow+self.ua+self.content_length